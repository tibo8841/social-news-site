{"ast":null,"code":"var _jsxFileName = \"/Users/tibo/Documents/Coursework-Backend-Week2/socialnews/frontend/src/Story.js\";\nimport React from 'react';\nimport './Story.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Story(props) {\n  console.log('The props passed to the Story component were: ' + props);\n\n  function handleVote(direction) {} // To be able to register a click event on the upvote or downvote, we need pass a callback function\n  // as a prop to this component.\n  //\n  // The callback function will be called when the user clicks on the upvote or downvote button.\n\n\n  const {\n    title,\n    score,\n    url\n  } = props.story;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upvote\",\n      onClick: handleVote('up'),\n      children: \"\\u2B06\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"downvote\",\n      onClick: handleVote('down'),\n      children: \"\\u2B07\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"title\",\n      href: url,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), ' ', \"(\", score, \" points)\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Story;\nexport default Story;\n\nvar _c;\n\n$RefreshReg$(_c, \"Story\");","map":{"version":3,"names":["React","Story","props","console","log","handleVote","direction","title","score","url","story"],"sources":["/Users/tibo/Documents/Coursework-Backend-Week2/socialnews/frontend/src/Story.js"],"sourcesContent":["import React from 'react'\nimport './Story.css'\n\nfunction Story(props) {\n  console.log('The props passed to the Story component were: ' + props)\n\n  function handleVote(direction) {}\n\n  // To be able to register a click event on the upvote or downvote, we need pass a callback function\n  // as a prop to this component.\n  //\n  // The callback function will be called when the user clicks on the upvote or downvote button.\n  const { title, score, url } = props.story\n\n  return (\n    <li>\n      <button className=\"upvote\" onClick={handleVote('up')}>\n        ⬆\n      </button>\n      <button className=\"downvote\" onClick={handleVote('down')}>\n        ⬇\n      </button>\n      <a className=\"title\" href={url}>\n        {title}\n      </a>{' '}\n      ({score} points)\n    </li>\n  )\n}\n\nexport default Story\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EACpBC,OAAO,CAACC,GAAR,CAAY,mDAAmDF,KAA/D;;EAEA,SAASG,UAAT,CAAoBC,SAApB,EAA+B,CAAE,CAHb,CAKpB;EACA;EACA;EACA;;;EACA,MAAM;IAAEC,KAAF;IAASC,KAAT;IAAgBC;EAAhB,IAAwBP,KAAK,CAACQ,KAApC;EAEA,oBACE;IAAA,wBACE;MAAQ,SAAS,EAAC,QAAlB;MAA2B,OAAO,EAAEL,UAAU,CAAC,IAAD,CAA9C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAQ,SAAS,EAAC,UAAlB;MAA6B,OAAO,EAAEA,UAAU,CAAC,MAAD,CAAhD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAOE;MAAG,SAAS,EAAC,OAAb;MAAqB,IAAI,EAAEI,GAA3B;MAAA,UACGF;IADH;MAAA;MAAA;MAAA;IAAA,QAPF,EASO,GATP,OAUIC,KAVJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;KAzBQP,K;AA2BT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}